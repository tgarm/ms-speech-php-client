<?php
/**
 * CustomModelProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Speech Services API v3.1
 *
 * Speech Services API v3.1.
 *
 * OpenAPI spec version: v3.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.29
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * CustomModelProperties Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CustomModelProperties implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CustomModelProperties';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'custom_model_weight_percent' => 'int',
        'deprecation_dates' => '\Swagger\Client\Model\CustomModelDeprecationDates',
        'features' => '\Swagger\Client\Model\CustomModelFeatures',
        'email' => 'string',
        'error' => '\Swagger\Client\Model\EntityError'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'custom_model_weight_percent' => 'int32',
        'deprecation_dates' => null,
        'features' => null,
        'email' => null,
        'error' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'custom_model_weight_percent' => 'customModelWeightPercent',
        'deprecation_dates' => 'deprecationDates',
        'features' => 'features',
        'email' => 'email',
        'error' => 'error'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'custom_model_weight_percent' => 'setCustomModelWeightPercent',
        'deprecation_dates' => 'setDeprecationDates',
        'features' => 'setFeatures',
        'email' => 'setEmail',
        'error' => 'setError'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'custom_model_weight_percent' => 'getCustomModelWeightPercent',
        'deprecation_dates' => 'getDeprecationDates',
        'features' => 'getFeatures',
        'email' => 'getEmail',
        'error' => 'getError'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['custom_model_weight_percent'] = isset($data['custom_model_weight_percent']) ? $data['custom_model_weight_percent'] : null;
        $this->container['deprecation_dates'] = isset($data['deprecation_dates']) ? $data['deprecation_dates'] : null;
        $this->container['features'] = isset($data['features']) ? $data['features'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['error'] = isset($data['error']) ? $data['error'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['custom_model_weight_percent']) && ($this->container['custom_model_weight_percent'] > 100)) {
            $invalidProperties[] = "invalid value for 'custom_model_weight_percent', must be smaller than or equal to 100.";
        }

        if (!is_null($this->container['custom_model_weight_percent']) && ($this->container['custom_model_weight_percent'] < 1)) {
            $invalidProperties[] = "invalid value for 'custom_model_weight_percent', must be bigger than or equal to 1.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets custom_model_weight_percent
     *
     * @return int
     */
    public function getCustomModelWeightPercent()
    {
        return $this->container['custom_model_weight_percent'];
    }

    /**
     * Sets custom_model_weight_percent
     *
     * @param int $custom_model_weight_percent The weight of custom model between 1 (1% custom model and 99% base model) and 100 (100% custom model and 0% base model).  When this property is not set, the service chooses a suitable value (get the model to retrieve the selected weight).  Start without using this property. If needed, choose a larger (or smaller) weight to increase (or decrease) the impact of the custom model.
     *
     * @return $this
     */
    public function setCustomModelWeightPercent($custom_model_weight_percent)
    {

        if (!is_null($custom_model_weight_percent) && ($custom_model_weight_percent > 100)) {
            throw new \InvalidArgumentException('invalid value for $custom_model_weight_percent when calling CustomModelProperties., must be smaller than or equal to 100.');
        }
        if (!is_null($custom_model_weight_percent) && ($custom_model_weight_percent < 1)) {
            throw new \InvalidArgumentException('invalid value for $custom_model_weight_percent when calling CustomModelProperties., must be bigger than or equal to 1.');
        }

        $this->container['custom_model_weight_percent'] = $custom_model_weight_percent;

        return $this;
    }

    /**
     * Gets deprecation_dates
     *
     * @return \Swagger\Client\Model\CustomModelDeprecationDates
     */
    public function getDeprecationDates()
    {
        return $this->container['deprecation_dates'];
    }

    /**
     * Sets deprecation_dates
     *
     * @param \Swagger\Client\Model\CustomModelDeprecationDates $deprecation_dates deprecation_dates
     *
     * @return $this
     */
    public function setDeprecationDates($deprecation_dates)
    {
        $this->container['deprecation_dates'] = $deprecation_dates;

        return $this;
    }

    /**
     * Gets features
     *
     * @return \Swagger\Client\Model\CustomModelFeatures
     */
    public function getFeatures()
    {
        return $this->container['features'];
    }

    /**
     * Sets features
     *
     * @param \Swagger\Client\Model\CustomModelFeatures $features features
     *
     * @return $this
     */
    public function setFeatures($features)
    {
        $this->container['features'] = $features;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email The email address to send email notifications to in case the operation completes.  The value will be removed after successfully sending the email.
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets error
     *
     * @return \Swagger\Client\Model\EntityError
     */
    public function getError()
    {
        return $this->container['error'];
    }

    /**
     * Sets error
     *
     * @param \Swagger\Client\Model\EntityError $error error
     *
     * @return $this
     */
    public function setError($error)
    {
        $this->container['error'] = $error;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


